// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="sigmoid_top_sigmoid_top,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k325t-ffg676-2,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=3.552625,HLS_SYN_LAT=11,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=896,HLS_SYN_LUT=1597,HLS_VERSION=2021_1}" *)

module sigmoid_top (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_r,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] in_r;
output  [7:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_pp0_stage0_subdone;
wire   [3:0] ROM_EXP_V_address0;
reg    ROM_EXP_V_ce0;
wire   [6:0] ROM_EXP_V_q0;
reg   [7:0] in_read_reg_805;
wire    ap_block_pp0_stage0_11001;
reg   [7:0] in_read_reg_805_pp0_iter1_reg;
reg   [7:0] in_read_reg_805_pp0_iter2_reg;
reg   [7:0] in_read_reg_805_pp0_iter3_reg;
reg   [7:0] in_read_reg_805_pp0_iter4_reg;
reg   [7:0] in_read_reg_805_pp0_iter5_reg;
wire   [31:0] sub_ln947_fu_206_p2;
reg   [31:0] sub_ln947_reg_817;
wire   [3:0] trunc_ln950_fu_216_p1;
reg   [3:0] trunc_ln950_reg_824;
wire   [7:0] add_ln952_fu_220_p2;
reg   [7:0] add_ln952_reg_829;
wire   [10:0] trunc_ln946_fu_226_p1;
reg   [10:0] trunc_ln946_reg_834;
reg   [10:0] trunc_ln946_reg_834_pp0_iter1_reg;
reg   [10:0] trunc_ln946_reg_834_pp0_iter2_reg;
wire   [0:0] icmp_ln1549_1_fu_240_p2;
reg   [0:0] icmp_ln1549_1_reg_839;
reg   [0:0] icmp_ln1549_1_reg_839_pp0_iter1_reg;
reg   [0:0] icmp_ln1549_1_reg_839_pp0_iter2_reg;
reg   [0:0] icmp_ln1549_1_reg_839_pp0_iter3_reg;
reg   [0:0] icmp_ln1549_1_reg_839_pp0_iter4_reg;
reg   [0:0] icmp_ln1549_1_reg_839_pp0_iter5_reg;
reg   [6:0] r_1_reg_844;
reg   [6:0] r_1_reg_844_pp0_iter1_reg;
reg   [6:0] r_1_reg_844_pp0_iter2_reg;
reg   [6:0] r_1_reg_844_pp0_iter3_reg;
reg   [6:0] r_1_reg_844_pp0_iter4_reg;
reg   [6:0] r_1_reg_844_pp0_iter5_reg;
wire   [0:0] icmp_ln961_fu_345_p2;
reg   [0:0] icmp_ln961_reg_849;
wire   [31:0] add_ln961_fu_351_p2;
reg   [31:0] add_ln961_reg_854;
wire   [31:0] sub_ln962_fu_356_p2;
reg   [31:0] sub_ln962_reg_859;
wire   [0:0] tobool29_i_i679_fu_361_p2;
reg   [0:0] tobool29_i_i679_reg_864;
reg   [62:0] m_5_reg_869;
reg   [0:0] p_Result_4_reg_874;
wire   [0:0] icmp_ln1560_1_fu_432_p2;
reg   [0:0] icmp_ln1560_1_reg_879;
reg   [0:0] icmp_ln1560_1_reg_879_pp0_iter3_reg;
reg   [0:0] icmp_ln1560_1_reg_879_pp0_iter4_reg;
wire   [0:0] icmp_ln1549_fu_438_p2;
reg   [0:0] icmp_ln1549_reg_884;
reg   [0:0] icmp_ln1549_reg_884_pp0_iter4_reg;
reg   [0:0] icmp_ln1549_reg_884_pp0_iter5_reg;
reg   [0:0] icmp_ln1549_reg_884_pp0_iter6_reg;
wire   [63:0] p_Result_7_fu_472_p5;
reg   [63:0] p_Result_7_reg_890;
wire   [0:0] icmp_ln1560_fu_484_p2;
reg   [0:0] icmp_ln1560_reg_895;
reg   [0:0] icmp_ln1560_reg_895_pp0_iter4_reg;
wire   [12:0] r_V_fu_497_p2;
reg   [12:0] r_V_reg_905;
reg   [12:0] r_V_reg_905_pp0_iter5_reg;
reg   [12:0] r_V_reg_905_pp0_iter6_reg;
reg   [12:0] r_V_reg_905_pp0_iter7_reg;
reg   [3:0] n_reg_910;
reg   [7:0] tmp_5_reg_915;
wire   [0:0] xor_ln1560_fu_533_p2;
reg   [0:0] xor_ln1560_reg_920;
reg   [7:0] j_reg_926;
wire   [7:0] x0_V_fu_674_p3;
reg   [7:0] x0_V_reg_936;
wire   [8:0] ret_V_3_fu_685_p2;
reg  signed [8:0] ret_V_3_reg_941;
reg   [6:0] r_V_1_reg_946;
wire   [15:0] r_V_2_fu_703_p2;
reg   [15:0] r_V_2_reg_951;
wire   [5:0] trunc_ln1352_fu_713_p1;
reg   [5:0] trunc_ln1352_reg_956;
reg   [5:0] trunc_ln1352_reg_956_pp0_iter8_reg;
reg   [5:0] trunc_ln1352_reg_956_pp0_iter9_reg;
wire   [15:0] r_V_4_fu_717_p2;
reg   [15:0] r_V_4_reg_961;
wire   [63:0] zext_ln573_fu_558_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] grp_fu_175_p0;
reg   [7:0] p_Result_s_fu_180_p4;
wire   [31:0] p_Result_6_fu_190_p3;
reg   [31:0] l_fu_198_p3;
wire   [7:0] trunc_ln947_fu_212_p1;
wire   [3:0] tmp_10_fu_230_p4;
wire   [31:0] lsb_index_fu_256_p2;
wire   [30:0] tmp_6_fu_261_p4;
wire   [3:0] sub_ln950_fu_277_p2;
wire   [7:0] zext_ln950_fu_282_p1;
wire   [7:0] lshr_ln950_fu_286_p2;
wire   [7:0] p_Result_2_fu_292_p2;
wire   [0:0] tmp_8_fu_303_p3;
wire   [0:0] icmp_ln949_fu_271_p2;
wire   [0:0] icmp_ln950_fu_297_p2;
wire   [7:0] shl_ln952_fu_323_p2;
wire   [7:0] and_ln952_fu_328_p2;
wire   [0:0] p_Result_3_fu_333_p2;
wire   [0:0] and_ln949_fu_317_p2;
wire   [0:0] a_fu_339_p2;
wire   [0:0] xor_ln952_fu_311_p2;
wire   [63:0] zext_ln960_fu_367_p1;
wire   [63:0] zext_ln961_fu_370_p1;
wire   [63:0] zext_ln962_fu_379_p1;
wire   [63:0] lshr_ln961_fu_373_p2;
wire   [63:0] shl_ln962_fu_382_p2;
wire   [63:0] m_fu_388_p3;
wire   [63:0] zext_ln964_fu_395_p1;
wire   [63:0] m_1_fu_398_p2;
wire   [51:0] trunc_ln3_fu_422_p4;
wire   [10:0] sub_ln968_fu_453_p2;
wire   [10:0] select_ln946_fu_446_p3;
wire   [10:0] add_ln968_fu_458_p2;
wire   [63:0] zext_ln965_fu_443_p1;
wire   [11:0] tmp_fu_464_p3;
wire   [7:0] r_V_fu_497_p0;
wire   [5:0] r_V_fu_497_p1;
wire   [0:0] or_ln1560_fu_523_p2;
wire   [0:0] grp_fu_175_p2;
wire   [0:0] and_ln1560_fu_527_p2;
wire   [7:0] mul_ln1168_fu_542_p0;
wire   [4:0] mul_ln1168_fu_542_p1;
wire   [9:0] mul_ln1168_fu_542_p2;
wire   [8:0] zext_ln1245_fu_567_p1;
wire   [8:0] r_4_fu_576_p3;
wire   [9:0] zext_ln1245_1_fu_583_p1;
wire   [9:0] r_5_fu_593_p3;
wire   [0:0] icmp_ln938_fu_562_p2;
wire   [0:0] or_ln938_fu_606_p2;
wire   [0:0] xor_ln938_fu_616_p2;
wire   [0:0] and_ln1549_fu_622_p2;
wire   [8:0] ret_V_fu_570_p2;
wire   [6:0] tmp_2_fu_632_p4;
wire   [9:0] ret_V_1_fu_587_p2;
wire   [9:0] ret_V_2_fu_600_p2;
wire   [0:0] or_ln1560_1_fu_611_p2;
wire   [7:0] tmp_4_fu_656_p4;
wire   [7:0] zext_ln1549_fu_642_p1;
wire   [0:0] and_ln1549_1_fu_627_p2;
wire   [7:0] tmp_3_fu_646_p4;
wire   [7:0] select_ln1560_fu_666_p3;
wire  signed [8:0] sext_ln1246_fu_682_p1;
wire   [6:0] r_V_2_fu_703_p1;
wire   [7:0] x0_V_2_fu_691_p3;
wire   [7:0] r_V_4_fu_717_p0;
wire   [15:0] zext_ln1171_fu_709_p1;
wire   [7:0] r_V_4_fu_717_p1;
wire   [3:0] m_4_fu_723_p4;
wire  signed [46:0] sext_ln1168_fu_732_p1;
wire   [46:0] zext_ln1386_fu_735_p1;
wire   [46:0] r_fu_739_p2;
wire   [7:0] exp_negx_V_fu_745_p4;
wire  signed [8:0] sext_ln1245_fu_755_p1;
wire  signed [8:0] ret_V_4_fu_759_p2;
wire  signed [18:0] tmp_7_fu_779_p1;
wire   [18:0] grp_fu_796_p3;
wire   [6:0] tmp_7_fu_779_p4;
wire   [15:0] grp_fu_796_p1;
wire   [18:0] grp_fu_796_p2;
wire    ap_block_pp0_stage0_00001;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to10;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [18:0] grp_fu_796_p10;
wire   [9:0] mul_ln1168_fu_542_p00;
wire   [15:0] r_V_2_fu_703_p10;
wire   [12:0] r_V_fu_497_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
end

sigmoid_top_ROM_EXP_V #(
    .DataWidth( 7 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
ROM_EXP_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ROM_EXP_V_address0),
    .ce0(ROM_EXP_V_ce0),
    .q0(ROM_EXP_V_q0)
);

sigmoid_top_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_175_p0),
    .din1(64'd4612530443357519872),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_175_p2)
);

sigmoid_top_mul_8ns_6ns_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 13 ))
mul_8ns_6ns_13_1_1_U2(
    .din0(r_V_fu_497_p0),
    .din1(r_V_fu_497_p1),
    .dout(r_V_fu_497_p2)
);

sigmoid_top_mul_8ns_5ns_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 10 ))
mul_8ns_5ns_10_1_1_U3(
    .din0(mul_ln1168_fu_542_p0),
    .din1(mul_ln1168_fu_542_p1),
    .dout(mul_ln1168_fu_542_p2)
);

sigmoid_top_mul_9s_7ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 16 ))
mul_9s_7ns_16_1_1_U4(
    .din0(ret_V_3_reg_941),
    .din1(r_V_2_fu_703_p1),
    .dout(r_V_2_fu_703_p2)
);

sigmoid_top_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U5(
    .din0(r_V_4_fu_717_p0),
    .din1(r_V_4_fu_717_p1),
    .dout(r_V_4_fu_717_p2)
);

sigmoid_top_mac_mulsub_9s_16ns_19ns_19_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 19 ),
    .dout_WIDTH( 19 ))
mac_mulsub_9s_16ns_19ns_19_4_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ret_V_4_fu_759_p2),
    .din1(grp_fu_796_p1),
    .din2(grp_fu_796_p2),
    .ce(1'b1),
    .dout(grp_fu_796_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln952_reg_829 <= add_ln952_fu_220_p2;
        add_ln961_reg_854 <= add_ln961_fu_351_p2;
        icmp_ln1549_1_reg_839 <= icmp_ln1549_1_fu_240_p2;
        icmp_ln1549_1_reg_839_pp0_iter1_reg <= icmp_ln1549_1_reg_839;
        icmp_ln961_reg_849 <= icmp_ln961_fu_345_p2;
        in_read_reg_805 <= in_r;
        in_read_reg_805_pp0_iter1_reg <= in_read_reg_805;
        r_1_reg_844 <= {{in_r[7:1]}};
        r_1_reg_844_pp0_iter1_reg <= r_1_reg_844;
        sub_ln947_reg_817 <= sub_ln947_fu_206_p2;
        sub_ln962_reg_859 <= sub_ln962_fu_356_p2;
        tobool29_i_i679_reg_864 <= tobool29_i_i679_fu_361_p2;
        trunc_ln946_reg_834 <= trunc_ln946_fu_226_p1;
        trunc_ln946_reg_834_pp0_iter1_reg <= trunc_ln946_reg_834;
        trunc_ln950_reg_824 <= trunc_ln950_fu_216_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln1549_1_reg_839_pp0_iter2_reg <= icmp_ln1549_1_reg_839_pp0_iter1_reg;
        icmp_ln1549_1_reg_839_pp0_iter3_reg <= icmp_ln1549_1_reg_839_pp0_iter2_reg;
        icmp_ln1549_1_reg_839_pp0_iter4_reg <= icmp_ln1549_1_reg_839_pp0_iter3_reg;
        icmp_ln1549_1_reg_839_pp0_iter5_reg <= icmp_ln1549_1_reg_839_pp0_iter4_reg;
        icmp_ln1549_reg_884 <= icmp_ln1549_fu_438_p2;
        icmp_ln1549_reg_884_pp0_iter4_reg <= icmp_ln1549_reg_884;
        icmp_ln1549_reg_884_pp0_iter5_reg <= icmp_ln1549_reg_884_pp0_iter4_reg;
        icmp_ln1549_reg_884_pp0_iter6_reg <= icmp_ln1549_reg_884_pp0_iter5_reg;
        icmp_ln1560_1_reg_879 <= icmp_ln1560_1_fu_432_p2;
        icmp_ln1560_1_reg_879_pp0_iter3_reg <= icmp_ln1560_1_reg_879;
        icmp_ln1560_1_reg_879_pp0_iter4_reg <= icmp_ln1560_1_reg_879_pp0_iter3_reg;
        icmp_ln1560_reg_895 <= icmp_ln1560_fu_484_p2;
        icmp_ln1560_reg_895_pp0_iter4_reg <= icmp_ln1560_reg_895;
        in_read_reg_805_pp0_iter2_reg <= in_read_reg_805_pp0_iter1_reg;
        in_read_reg_805_pp0_iter3_reg <= in_read_reg_805_pp0_iter2_reg;
        in_read_reg_805_pp0_iter4_reg <= in_read_reg_805_pp0_iter3_reg;
        in_read_reg_805_pp0_iter5_reg <= in_read_reg_805_pp0_iter4_reg;
        j_reg_926 <= {{mul_ln1168_fu_542_p2[9:2]}};
        m_5_reg_869 <= {{m_1_fu_398_p2[63:1]}};
        n_reg_910 <= {{r_V_fu_497_p2[7:4]}};
        p_Result_4_reg_874 <= m_1_fu_398_p2[32'd54];
        p_Result_7_reg_890 <= p_Result_7_fu_472_p5;
        r_1_reg_844_pp0_iter2_reg <= r_1_reg_844_pp0_iter1_reg;
        r_1_reg_844_pp0_iter3_reg <= r_1_reg_844_pp0_iter2_reg;
        r_1_reg_844_pp0_iter4_reg <= r_1_reg_844_pp0_iter3_reg;
        r_1_reg_844_pp0_iter5_reg <= r_1_reg_844_pp0_iter4_reg;
        r_V_1_reg_946 <= ROM_EXP_V_q0;
        r_V_2_reg_951 <= r_V_2_fu_703_p2;
        r_V_4_reg_961 <= r_V_4_fu_717_p2;
        r_V_reg_905 <= r_V_fu_497_p2;
        r_V_reg_905_pp0_iter5_reg <= r_V_reg_905;
        r_V_reg_905_pp0_iter6_reg <= r_V_reg_905_pp0_iter5_reg;
        r_V_reg_905_pp0_iter7_reg <= r_V_reg_905_pp0_iter6_reg;
        ret_V_3_reg_941 <= ret_V_3_fu_685_p2;
        tmp_5_reg_915 <= {{r_V_fu_497_p2[11:4]}};
        trunc_ln1352_reg_956 <= trunc_ln1352_fu_713_p1;
        trunc_ln1352_reg_956_pp0_iter8_reg <= trunc_ln1352_reg_956;
        trunc_ln1352_reg_956_pp0_iter9_reg <= trunc_ln1352_reg_956_pp0_iter8_reg;
        trunc_ln946_reg_834_pp0_iter2_reg <= trunc_ln946_reg_834_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1549_reg_884_pp0_iter5_reg == 1'd0))) begin
        x0_V_reg_936 <= x0_V_fu_674_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1549_reg_884_pp0_iter4_reg == 1'd0))) begin
        xor_ln1560_reg_920 <= xor_ln1560_fu_533_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        ROM_EXP_V_ce0 = 1'b1;
    end else begin
        ROM_EXP_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to10 = 1'b1;
    end else begin
        ap_idle_pp0_0to10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to10 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ROM_EXP_V_address0 = zext_ln573_fu_558_p1;

assign a_fu_339_p2 = (p_Result_3_fu_333_p2 | and_ln949_fu_317_p2);

assign add_ln952_fu_220_p2 = ($signed(trunc_ln947_fu_212_p1) + $signed(8'd203));

assign add_ln961_fu_351_p2 = ($signed(sub_ln947_reg_817) + $signed(32'd4294967242));

assign add_ln968_fu_458_p2 = (sub_ln968_fu_453_p2 + select_ln946_fu_446_p3);

assign and_ln1549_1_fu_627_p2 = (xor_ln1560_reg_920 & and_ln1549_fu_622_p2);

assign and_ln1549_fu_622_p2 = (xor_ln938_fu_616_p2 & icmp_ln1549_1_reg_839_pp0_iter5_reg);

assign and_ln1560_fu_527_p2 = (or_ln1560_fu_523_p2 & grp_fu_175_p2);

assign and_ln949_fu_317_p2 = (icmp_ln950_fu_297_p2 & icmp_ln949_fu_271_p2);

assign and_ln952_fu_328_p2 = (shl_ln952_fu_323_p2 & in_read_reg_805);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = {{tmp_7_fu_779_p4}, {1'd0}};

assign exp_negx_V_fu_745_p4 = {{r_fu_739_p2[13:6]}};

assign grp_fu_175_p0 = p_Result_7_reg_890;

assign grp_fu_796_p1 = grp_fu_796_p10;

assign grp_fu_796_p10 = r_V_4_reg_961;

assign grp_fu_796_p2 = {{trunc_ln1352_reg_956_pp0_iter9_reg}, {13'd0}};

assign icmp_ln1549_1_fu_240_p2 = ((tmp_10_fu_230_p4 != 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln1549_fu_438_p2 = ((in_read_reg_805_pp0_iter2_reg > 8'd79) ? 1'b1 : 1'b0);

assign icmp_ln1560_1_fu_432_p2 = ((trunc_ln3_fu_422_p4 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln1560_fu_484_p2 = ((add_ln968_fu_458_p2 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln938_fu_562_p2 = ((in_read_reg_805_pp0_iter5_reg == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln949_fu_271_p2 = (($signed(tmp_6_fu_261_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln950_fu_297_p2 = ((p_Result_2_fu_292_p2 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln961_fu_345_p2 = (($signed(lsb_index_fu_256_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);


always @ (p_Result_6_fu_190_p3) begin
    if (p_Result_6_fu_190_p3[0] == 1'b1) begin
        l_fu_198_p3 = 32'd0;
    end else if (p_Result_6_fu_190_p3[1] == 1'b1) begin
        l_fu_198_p3 = 32'd1;
    end else if (p_Result_6_fu_190_p3[2] == 1'b1) begin
        l_fu_198_p3 = 32'd2;
    end else if (p_Result_6_fu_190_p3[3] == 1'b1) begin
        l_fu_198_p3 = 32'd3;
    end else if (p_Result_6_fu_190_p3[4] == 1'b1) begin
        l_fu_198_p3 = 32'd4;
    end else if (p_Result_6_fu_190_p3[5] == 1'b1) begin
        l_fu_198_p3 = 32'd5;
    end else if (p_Result_6_fu_190_p3[6] == 1'b1) begin
        l_fu_198_p3 = 32'd6;
    end else if (p_Result_6_fu_190_p3[7] == 1'b1) begin
        l_fu_198_p3 = 32'd7;
    end else if (p_Result_6_fu_190_p3[8] == 1'b1) begin
        l_fu_198_p3 = 32'd8;
    end else if (p_Result_6_fu_190_p3[9] == 1'b1) begin
        l_fu_198_p3 = 32'd9;
    end else if (p_Result_6_fu_190_p3[10] == 1'b1) begin
        l_fu_198_p3 = 32'd10;
    end else if (p_Result_6_fu_190_p3[11] == 1'b1) begin
        l_fu_198_p3 = 32'd11;
    end else if (p_Result_6_fu_190_p3[12] == 1'b1) begin
        l_fu_198_p3 = 32'd12;
    end else if (p_Result_6_fu_190_p3[13] == 1'b1) begin
        l_fu_198_p3 = 32'd13;
    end else if (p_Result_6_fu_190_p3[14] == 1'b1) begin
        l_fu_198_p3 = 32'd14;
    end else if (p_Result_6_fu_190_p3[15] == 1'b1) begin
        l_fu_198_p3 = 32'd15;
    end else if (p_Result_6_fu_190_p3[16] == 1'b1) begin
        l_fu_198_p3 = 32'd16;
    end else if (p_Result_6_fu_190_p3[17] == 1'b1) begin
        l_fu_198_p3 = 32'd17;
    end else if (p_Result_6_fu_190_p3[18] == 1'b1) begin
        l_fu_198_p3 = 32'd18;
    end else if (p_Result_6_fu_190_p3[19] == 1'b1) begin
        l_fu_198_p3 = 32'd19;
    end else if (p_Result_6_fu_190_p3[20] == 1'b1) begin
        l_fu_198_p3 = 32'd20;
    end else if (p_Result_6_fu_190_p3[21] == 1'b1) begin
        l_fu_198_p3 = 32'd21;
    end else if (p_Result_6_fu_190_p3[22] == 1'b1) begin
        l_fu_198_p3 = 32'd22;
    end else if (p_Result_6_fu_190_p3[23] == 1'b1) begin
        l_fu_198_p3 = 32'd23;
    end else if (p_Result_6_fu_190_p3[24] == 1'b1) begin
        l_fu_198_p3 = 32'd24;
    end else if (p_Result_6_fu_190_p3[25] == 1'b1) begin
        l_fu_198_p3 = 32'd25;
    end else if (p_Result_6_fu_190_p3[26] == 1'b1) begin
        l_fu_198_p3 = 32'd26;
    end else if (p_Result_6_fu_190_p3[27] == 1'b1) begin
        l_fu_198_p3 = 32'd27;
    end else if (p_Result_6_fu_190_p3[28] == 1'b1) begin
        l_fu_198_p3 = 32'd28;
    end else if (p_Result_6_fu_190_p3[29] == 1'b1) begin
        l_fu_198_p3 = 32'd29;
    end else if (p_Result_6_fu_190_p3[30] == 1'b1) begin
        l_fu_198_p3 = 32'd30;
    end else if (p_Result_6_fu_190_p3[31] == 1'b1) begin
        l_fu_198_p3 = 32'd31;
    end else begin
        l_fu_198_p3 = 32'd32;
    end
end

assign lsb_index_fu_256_p2 = ($signed(sub_ln947_reg_817) + $signed(32'd4294967243));

assign lshr_ln950_fu_286_p2 = 8'd255 >> zext_ln950_fu_282_p1;

assign lshr_ln961_fu_373_p2 = zext_ln960_fu_367_p1 >> zext_ln961_fu_370_p1;

assign m_1_fu_398_p2 = (m_fu_388_p3 + zext_ln964_fu_395_p1);

assign m_4_fu_723_p4 = {{r_V_reg_905_pp0_iter7_reg[11:8]}};

assign m_fu_388_p3 = ((icmp_ln961_reg_849[0:0] == 1'b1) ? lshr_ln961_fu_373_p2 : shl_ln962_fu_382_p2);

assign mul_ln1168_fu_542_p0 = mul_ln1168_fu_542_p00;

assign mul_ln1168_fu_542_p00 = tmp_5_reg_915;

assign mul_ln1168_fu_542_p1 = 10'd11;

assign or_ln1560_1_fu_611_p2 = (xor_ln1560_reg_920 | or_ln938_fu_606_p2);

assign or_ln1560_fu_523_p2 = (icmp_ln1560_reg_895_pp0_iter4_reg | icmp_ln1560_1_reg_879_pp0_iter4_reg);

assign or_ln938_fu_606_p2 = (icmp_ln938_fu_562_p2 | icmp_ln1549_reg_884_pp0_iter5_reg);

assign p_Result_2_fu_292_p2 = (lshr_ln950_fu_286_p2 & in_read_reg_805);

assign p_Result_3_fu_333_p2 = ((and_ln952_fu_328_p2 != 8'd0) ? 1'b1 : 1'b0);

assign p_Result_6_fu_190_p3 = {{24'd16777215}, {p_Result_s_fu_180_p4}};

assign p_Result_7_fu_472_p5 = {{tmp_fu_464_p3}, {zext_ln965_fu_443_p1[51:0]}};

integer ap_tvar_int_0;

always @ (in_r) begin
    for (ap_tvar_int_0 = 8 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 7 - 0) begin
            p_Result_s_fu_180_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_180_p4[ap_tvar_int_0] = in_r[7 - ap_tvar_int_0];
        end
    end
end

assign r_4_fu_576_p3 = {{in_read_reg_805_pp0_iter5_reg}, {1'd0}};

assign r_5_fu_593_p3 = {{in_read_reg_805_pp0_iter5_reg}, {2'd0}};

assign r_V_2_fu_703_p1 = r_V_2_fu_703_p10;

assign r_V_2_fu_703_p10 = r_V_1_reg_946;

assign r_V_4_fu_717_p0 = zext_ln1171_fu_709_p1;

assign r_V_4_fu_717_p1 = zext_ln1171_fu_709_p1;

assign r_V_fu_497_p0 = r_V_fu_497_p00;

assign r_V_fu_497_p00 = in_read_reg_805_pp0_iter3_reg;

assign r_V_fu_497_p1 = 13'd23;

assign r_fu_739_p2 = $signed(sext_ln1168_fu_732_p1) >>> zext_ln1386_fu_735_p1;

assign ret_V_1_fu_587_p2 = (zext_ln1245_1_fu_583_p1 + 10'd160);

assign ret_V_2_fu_600_p2 = (r_5_fu_593_p3 + 10'd128);

assign ret_V_3_fu_685_p2 = ($signed(9'd64) - $signed(sext_ln1246_fu_682_p1));

assign ret_V_4_fu_759_p2 = ($signed(sext_ln1245_fu_755_p1) + $signed(9'd64));

assign ret_V_fu_570_p2 = (zext_ln1245_fu_567_p1 + 9'd216);

assign select_ln1560_fu_666_p3 = ((or_ln1560_1_fu_611_p2[0:0] == 1'b1) ? tmp_4_fu_656_p4 : zext_ln1549_fu_642_p1);

assign select_ln946_fu_446_p3 = ((p_Result_4_reg_874[0:0] == 1'b1) ? 11'd1023 : 11'd1022);

assign sext_ln1168_fu_732_p1 = $signed(r_V_2_reg_951);

assign sext_ln1245_fu_755_p1 = $signed(exp_negx_V_fu_745_p4);

assign sext_ln1246_fu_682_p1 = $signed(j_reg_926);

assign shl_ln952_fu_323_p2 = 8'd1 << add_ln952_reg_829;

assign shl_ln962_fu_382_p2 = zext_ln960_fu_367_p1 << zext_ln962_fu_379_p1;

assign sub_ln947_fu_206_p2 = (32'd8 - l_fu_198_p3);

assign sub_ln950_fu_277_p2 = ($signed(4'd14) - $signed(trunc_ln950_reg_824));

assign sub_ln962_fu_356_p2 = (32'd54 - sub_ln947_reg_817);

assign sub_ln968_fu_453_p2 = (11'd4 - trunc_ln946_reg_834_pp0_iter2_reg);

assign tmp_10_fu_230_p4 = {{in_r[7:4]}};

assign tmp_2_fu_632_p4 = {{ret_V_fu_570_p2[8:2]}};

assign tmp_3_fu_646_p4 = {{ret_V_1_fu_587_p2[9:2]}};

assign tmp_4_fu_656_p4 = {{ret_V_2_fu_600_p2[9:2]}};

assign tmp_6_fu_261_p4 = {{lsb_index_fu_256_p2[31:1]}};

assign tmp_7_fu_779_p1 = grp_fu_796_p3;

assign tmp_7_fu_779_p4 = {{tmp_7_fu_779_p1[18:12]}};

assign tmp_8_fu_303_p3 = lsb_index_fu_256_p2[32'd31];

assign tmp_fu_464_p3 = {{1'd0}, {add_ln968_fu_458_p2}};

assign tobool29_i_i679_fu_361_p2 = (xor_ln952_fu_311_p2 & a_fu_339_p2);

assign trunc_ln1352_fu_713_p1 = x0_V_2_fu_691_p3[5:0];

assign trunc_ln3_fu_422_p4 = {{m_1_fu_398_p2[52:1]}};

assign trunc_ln946_fu_226_p1 = l_fu_198_p3[10:0];

assign trunc_ln947_fu_212_p1 = sub_ln947_fu_206_p2[7:0];

assign trunc_ln950_fu_216_p1 = sub_ln947_fu_206_p2[3:0];

assign x0_V_2_fu_691_p3 = ((icmp_ln1549_reg_884_pp0_iter6_reg[0:0] == 1'b1) ? 8'd64 : x0_V_reg_936);

assign x0_V_fu_674_p3 = ((and_ln1549_1_fu_627_p2[0:0] == 1'b1) ? tmp_3_fu_646_p4 : select_ln1560_fu_666_p3);

assign xor_ln1560_fu_533_p2 = (1'd1 ^ and_ln1560_fu_527_p2);

assign xor_ln938_fu_616_p2 = (or_ln938_fu_606_p2 ^ 1'd1);

assign xor_ln952_fu_311_p2 = (tmp_8_fu_303_p3 ^ 1'd1);

assign zext_ln1171_fu_709_p1 = x0_V_2_fu_691_p3;

assign zext_ln1245_1_fu_583_p1 = r_4_fu_576_p3;

assign zext_ln1245_fu_567_p1 = r_1_reg_844_pp0_iter5_reg;

assign zext_ln1386_fu_735_p1 = m_4_fu_723_p4;

assign zext_ln1549_fu_642_p1 = tmp_2_fu_632_p4;

assign zext_ln573_fu_558_p1 = n_reg_910;

assign zext_ln950_fu_282_p1 = sub_ln950_fu_277_p2;

assign zext_ln960_fu_367_p1 = in_read_reg_805_pp0_iter1_reg;

assign zext_ln961_fu_370_p1 = add_ln961_reg_854;

assign zext_ln962_fu_379_p1 = sub_ln962_reg_859;

assign zext_ln964_fu_395_p1 = tobool29_i_i679_reg_864;

assign zext_ln965_fu_443_p1 = m_5_reg_869;

endmodule //sigmoid_top
