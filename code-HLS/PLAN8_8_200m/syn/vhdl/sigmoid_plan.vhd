-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sigmoid_plan is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_r : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of sigmoid_plan is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "sigmoid_plan_sigmoid_plan,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k325t-ffg676-2,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=3.552625,HLS_SYN_LAT=6,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=596,HLS_SYN_LUT=1161,HLS_VERSION=2021_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv64_4003000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0100000000000011000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv24_FFFFFF : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111111111111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_CB : STD_LOGIC_VECTOR (7 downto 0) := "11001011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_FFFFFFCB : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111001011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_FFFFFFCA : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111001010";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv11_3FE : STD_LOGIC_VECTOR (10 downto 0) := "01111111110";
    constant ap_const_lv11_4 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv8_4F : STD_LOGIC_VECTOR (7 downto 0) := "01001111";
    constant ap_const_lv13_D80 : STD_LOGIC_VECTOR (12 downto 0) := "0110110000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv13_A00 : STD_LOGIC_VECTOR (12 downto 0) := "0101000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv13_800 : STD_LOGIC_VECTOR (12 downto 0) := "0100000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal in_read_reg_594 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal in_read_reg_594_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal in_read_reg_594_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal in_read_reg_594_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal in_read_reg_594_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal in_read_reg_594_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln947_fu_161_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln947_reg_605 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln950_fu_171_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln950_reg_612 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln952_fu_175_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln952_reg_617 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln946_fu_181_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln946_reg_622 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln946_reg_622_pp0_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln946_reg_622_pp0_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln1549_1_fu_195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1549_1_reg_627 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1549_1_reg_627_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1549_1_reg_627_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1549_1_reg_627_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1549_1_reg_627_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1549_1_reg_627_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1386_fu_201_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln1386_reg_632 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln1386_reg_632_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln1386_reg_632_pp0_iter2_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln1386_reg_632_pp0_iter3_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln1386_reg_632_pp0_iter4_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln1386_reg_632_pp0_iter5_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln961_fu_294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln961_reg_637 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln961_fu_300_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln961_reg_642 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln962_fu_305_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln962_reg_647 : STD_LOGIC_VECTOR (31 downto 0);
    signal tobool29_i_i290_fu_310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tobool29_i_i290_reg_652 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_4_reg_657 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_4_reg_662 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1560_1_fu_381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1560_1_reg_667 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1560_1_reg_667_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1560_1_reg_667_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_fu_416_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_7_reg_672 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln1560_fu_428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1560_reg_677 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1560_reg_677_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1560_fu_448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1560_reg_687 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_130_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal p_Result_s_fu_135_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_6_fu_145_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_fu_153_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln947_fu_167_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_185_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal lsb_index_fu_205_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_210_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln950_fu_226_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln950_fu_231_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln950_fu_235_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_2_fu_241_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_252_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln949_fu_220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln950_fu_246_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln952_fu_272_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln952_fu_277_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_3_fu_282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln949_fu_266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_fu_288_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln952_fu_260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln960_fu_316_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln961_fu_319_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln962_fu_328_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln961_fu_322_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln962_fu_331_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_fu_337_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln964_fu_344_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_1_fu_347_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln3_fu_371_p4 : STD_LOGIC_VECTOR (51 downto 0);
    signal sub_ln968_fu_397_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln946_fu_390_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln968_fu_402_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln965_fu_387_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_408_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln1560_fu_438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1560_fu_442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal input_fu_454_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln43_fu_461_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_1_fu_481_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_2_fu_494_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln1549_fu_465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln938_fu_470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln938_fu_507_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln938_fu_518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1549_fu_524_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1549_1_fu_529_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal x0_V_1_fu_488_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_3_fu_540_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal x0_V_2_fu_501_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal x0_V_fu_475_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_ln1560_1_fu_513_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_558_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_568_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln1549_fu_534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1549_fu_550_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1549_1_fu_578_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to5 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component sigmoid_plan_dcmp_64ns_64ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    dcmp_64ns_64ns_1_2_no_dsp_1_U1 : component sigmoid_plan_dcmp_64ns_64ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_130_p0,
        din1 => ap_const_lv64_4003000000000000,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_3,
        dout => grp_fu_130_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln952_reg_617 <= add_ln952_fu_175_p2;
                add_ln961_reg_642 <= add_ln961_fu_300_p2;
                icmp_ln1549_1_reg_627 <= icmp_ln1549_1_fu_195_p2;
                icmp_ln1549_1_reg_627_pp0_iter1_reg <= icmp_ln1549_1_reg_627;
                icmp_ln961_reg_637 <= icmp_ln961_fu_294_p2;
                in_read_reg_594 <= in_r;
                in_read_reg_594_pp0_iter1_reg <= in_read_reg_594;
                sub_ln947_reg_605 <= sub_ln947_fu_161_p2;
                sub_ln962_reg_647 <= sub_ln962_fu_305_p2;
                tobool29_i_i290_reg_652 <= tobool29_i_i290_fu_310_p2;
                trunc_ln1386_reg_632 <= trunc_ln1386_fu_201_p1;
                trunc_ln1386_reg_632_pp0_iter1_reg <= trunc_ln1386_reg_632;
                trunc_ln946_reg_622 <= trunc_ln946_fu_181_p1;
                trunc_ln946_reg_622_pp0_iter1_reg <= trunc_ln946_reg_622;
                trunc_ln950_reg_612 <= trunc_ln950_fu_171_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln1549_1_reg_627_pp0_iter2_reg <= icmp_ln1549_1_reg_627_pp0_iter1_reg;
                icmp_ln1549_1_reg_627_pp0_iter3_reg <= icmp_ln1549_1_reg_627_pp0_iter2_reg;
                icmp_ln1549_1_reg_627_pp0_iter4_reg <= icmp_ln1549_1_reg_627_pp0_iter3_reg;
                icmp_ln1549_1_reg_627_pp0_iter5_reg <= icmp_ln1549_1_reg_627_pp0_iter4_reg;
                icmp_ln1560_1_reg_667 <= icmp_ln1560_1_fu_381_p2;
                icmp_ln1560_1_reg_667_pp0_iter3_reg <= icmp_ln1560_1_reg_667;
                icmp_ln1560_1_reg_667_pp0_iter4_reg <= icmp_ln1560_1_reg_667_pp0_iter3_reg;
                icmp_ln1560_reg_677 <= icmp_ln1560_fu_428_p2;
                icmp_ln1560_reg_677_pp0_iter4_reg <= icmp_ln1560_reg_677;
                in_read_reg_594_pp0_iter2_reg <= in_read_reg_594_pp0_iter1_reg;
                in_read_reg_594_pp0_iter3_reg <= in_read_reg_594_pp0_iter2_reg;
                in_read_reg_594_pp0_iter4_reg <= in_read_reg_594_pp0_iter3_reg;
                in_read_reg_594_pp0_iter5_reg <= in_read_reg_594_pp0_iter4_reg;
                m_4_reg_657 <= m_1_fu_347_p2(63 downto 1);
                p_Result_4_reg_662 <= m_1_fu_347_p2(54 downto 54);
                p_Result_7_reg_672 <= p_Result_7_fu_416_p5;
                trunc_ln1386_reg_632_pp0_iter2_reg <= trunc_ln1386_reg_632_pp0_iter1_reg;
                trunc_ln1386_reg_632_pp0_iter3_reg <= trunc_ln1386_reg_632_pp0_iter2_reg;
                trunc_ln1386_reg_632_pp0_iter4_reg <= trunc_ln1386_reg_632_pp0_iter3_reg;
                trunc_ln1386_reg_632_pp0_iter5_reg <= trunc_ln1386_reg_632_pp0_iter4_reg;
                trunc_ln946_reg_622_pp0_iter2_reg <= trunc_ln946_reg_622_pp0_iter1_reg;
                xor_ln1560_reg_687 <= xor_ln1560_fu_448_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    a_fu_288_p2 <= (p_Result_3_fu_282_p2 or and_ln949_fu_266_p2);
    add_ln952_fu_175_p2 <= std_logic_vector(unsigned(trunc_ln947_fu_167_p1) + unsigned(ap_const_lv8_CB));
    add_ln961_fu_300_p2 <= std_logic_vector(unsigned(sub_ln947_reg_605) + unsigned(ap_const_lv32_FFFFFFCA));
    add_ln968_fu_402_p2 <= std_logic_vector(unsigned(sub_ln968_fu_397_p2) + unsigned(select_ln946_fu_390_p3));
    and_ln1549_1_fu_529_p2 <= (xor_ln1560_reg_687 and and_ln1549_fu_524_p2);
    and_ln1549_fu_524_p2 <= (xor_ln938_fu_518_p2 and icmp_ln1549_1_reg_627_pp0_iter5_reg);
    and_ln1560_fu_442_p2 <= (or_ln1560_fu_438_p2 and grp_fu_130_p2);
    and_ln949_fu_266_p2 <= (icmp_ln950_fu_246_p2 and icmp_ln949_fu_220_p2);
    and_ln952_fu_277_p2 <= (shl_ln952_fu_272_p2 and in_read_reg_594);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to5_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to5 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to5)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to5 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= 
        select_ln1549_fu_550_p3 when (or_ln1549_fu_534_p2(0) = '1') else 
        select_ln1549_1_fu_578_p3;
    grp_fu_130_p0 <= p_Result_7_reg_672;
    icmp_ln1549_1_fu_195_p2 <= "0" when (tmp_8_fu_185_p4 = ap_const_lv4_0) else "1";
    icmp_ln1549_fu_465_p2 <= "1" when (unsigned(in_read_reg_594_pp0_iter5_reg) > unsigned(ap_const_lv8_4F)) else "0";
    icmp_ln1560_1_fu_381_p2 <= "1" when (trunc_ln3_fu_371_p4 = ap_const_lv52_0) else "0";
    icmp_ln1560_fu_428_p2 <= "0" when (add_ln968_fu_402_p2 = ap_const_lv11_7FF) else "1";
    icmp_ln938_fu_470_p2 <= "1" when (in_read_reg_594_pp0_iter5_reg = ap_const_lv8_0) else "0";
    icmp_ln949_fu_220_p2 <= "1" when (signed(tmp_2_fu_210_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln950_fu_246_p2 <= "0" when (p_Result_2_fu_241_p2 = ap_const_lv8_0) else "1";
    icmp_ln961_fu_294_p2 <= "1" when (signed(lsb_index_fu_205_p2) > signed(ap_const_lv32_0)) else "0";
    input_fu_454_p3 <= (in_read_reg_594_pp0_iter5_reg & ap_const_lv3_0);
    
    l_fu_153_p3_proc : process(p_Result_6_fu_145_p3)
    begin
        l_fu_153_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_6_fu_145_p3(i) = '1' then
                l_fu_153_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    lsb_index_fu_205_p2 <= std_logic_vector(unsigned(sub_ln947_reg_605) + unsigned(ap_const_lv32_FFFFFFCB));
    lshr_ln950_fu_235_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv8_FF),to_integer(unsigned('0' & zext_ln950_fu_231_p1(8-1 downto 0)))));
    lshr_ln961_fu_322_p2 <= std_logic_vector(shift_right(unsigned(zext_ln960_fu_316_p1),to_integer(unsigned('0' & zext_ln961_fu_319_p1(31-1 downto 0)))));
    m_1_fu_347_p2 <= std_logic_vector(unsigned(m_fu_337_p3) + unsigned(zext_ln964_fu_344_p1));
    m_fu_337_p3 <= 
        lshr_ln961_fu_322_p2 when (icmp_ln961_reg_637(0) = '1') else 
        shl_ln962_fu_331_p2;
    or_ln1549_fu_534_p2 <= (icmp_ln1549_fu_465_p2 or and_ln1549_1_fu_529_p2);
    or_ln1560_1_fu_513_p2 <= (xor_ln1560_reg_687 or or_ln938_fu_507_p2);
    or_ln1560_fu_438_p2 <= (icmp_ln1560_reg_677_pp0_iter4_reg or icmp_ln1560_1_reg_667_pp0_iter4_reg);
    or_ln938_fu_507_p2 <= (icmp_ln938_fu_470_p2 or icmp_ln1549_fu_465_p2);
    p_Result_2_fu_241_p2 <= (lshr_ln950_fu_235_p2 and in_read_reg_594);
    p_Result_3_fu_282_p2 <= "0" when (and_ln952_fu_277_p2 = ap_const_lv8_0) else "1";
    p_Result_6_fu_145_p3 <= (ap_const_lv24_FFFFFF & p_Result_s_fu_135_p4);
    p_Result_7_fu_416_p5 <= (tmp_fu_408_p3 & zext_ln965_fu_387_p1(51 downto 0));
    
    p_Result_s_fu_135_p4_proc : process(in_r)
    variable vlo_cpy : STD_LOGIC_VECTOR(8+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(8+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(8 - 1 downto 0);
    variable p_Result_s_fu_135_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(8 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(8 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(8 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(3 - 1 downto 0) := ap_const_lv32_7(3 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(3 - 1 downto 0) := ap_const_lv32_0(3 - 1 downto 0);
        v0_cpy := in_r;
        if (vlo_cpy(3 - 1 downto 0) > vhi_cpy(3 - 1 downto 0)) then
            vhi_cpy(3-1 downto 0) := std_logic_vector(8-1-unsigned(ap_const_lv32_0(3-1 downto 0)));
            vlo_cpy(3-1 downto 0) := std_logic_vector(8-1-unsigned(ap_const_lv32_7(3-1 downto 0)));
            for p_Result_s_fu_135_p4_i in 0 to 8-1 loop
                v0_cpy(p_Result_s_fu_135_p4_i) := in_r(8-1-p_Result_s_fu_135_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(3-1 downto 0)))));

        section := (others=>'0');
        section(3-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(3-1 downto 0)) - unsigned(vlo_cpy(3-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(8-1 downto 0)))));
        res_mask := res_mask(8-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_s_fu_135_p4 <= resvalue(8-1 downto 0);
    end process;

    r_1_fu_481_p3 <= (in_read_reg_594_pp0_iter5_reg & ap_const_lv5_0);
    r_2_fu_494_p3 <= (trunc_ln1386_reg_632_pp0_iter5_reg & ap_const_lv6_0);
    select_ln1549_1_fu_578_p3 <= 
        tmp_4_fu_558_p4 when (or_ln1560_1_fu_513_p2(0) = '1') else 
        tmp_5_fu_568_p4;
    select_ln1549_fu_550_p3 <= 
        ap_const_lv8_80 when (icmp_ln1549_fu_465_p2(0) = '1') else 
        tmp_3_fu_540_p4;
    select_ln946_fu_390_p3 <= 
        ap_const_lv11_3FF when (p_Result_4_reg_662(0) = '1') else 
        ap_const_lv11_3FE;
    shl_ln952_fu_272_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv8_1),to_integer(unsigned('0' & add_ln952_reg_617(8-1 downto 0)))));
    shl_ln962_fu_331_p2 <= std_logic_vector(shift_left(unsigned(zext_ln960_fu_316_p1),to_integer(unsigned('0' & zext_ln962_fu_328_p1(31-1 downto 0)))));
    sub_ln947_fu_161_p2 <= std_logic_vector(unsigned(ap_const_lv32_8) - unsigned(l_fu_153_p3));
    sub_ln950_fu_226_p2 <= std_logic_vector(signed(ap_const_lv4_E) - signed(trunc_ln950_reg_612));
    sub_ln962_fu_305_p2 <= std_logic_vector(unsigned(ap_const_lv32_36) - unsigned(sub_ln947_reg_605));
    sub_ln968_fu_397_p2 <= std_logic_vector(unsigned(ap_const_lv11_4) - unsigned(trunc_ln946_reg_622_pp0_iter2_reg));
    tmp_2_fu_210_p4 <= lsb_index_fu_205_p2(31 downto 1);
    tmp_3_fu_540_p4 <= x0_V_1_fu_488_p2(12 downto 5);
    tmp_4_fu_558_p4 <= x0_V_2_fu_501_p2(12 downto 5);
    tmp_5_fu_568_p4 <= x0_V_fu_475_p2(12 downto 5);
    tmp_6_fu_252_p3 <= lsb_index_fu_205_p2(31 downto 31);
    tmp_8_fu_185_p4 <= in_r(7 downto 4);
    tmp_fu_408_p3 <= (ap_const_lv1_0 & add_ln968_fu_402_p2);
    tobool29_i_i290_fu_310_p2 <= (xor_ln952_fu_260_p2 and a_fu_288_p2);
    trunc_ln1386_fu_201_p1 <= in_r(7 - 1 downto 0);
    trunc_ln3_fu_371_p4 <= m_1_fu_347_p2(52 downto 1);
    trunc_ln946_fu_181_p1 <= l_fu_153_p3(11 - 1 downto 0);
    trunc_ln947_fu_167_p1 <= sub_ln947_fu_161_p2(8 - 1 downto 0);
    trunc_ln950_fu_171_p1 <= sub_ln947_fu_161_p2(4 - 1 downto 0);
    x0_V_1_fu_488_p2 <= std_logic_vector(unsigned(r_1_fu_481_p3) + unsigned(ap_const_lv13_A00));
    x0_V_2_fu_501_p2 <= std_logic_vector(unsigned(r_2_fu_494_p3) + unsigned(ap_const_lv13_800));
    x0_V_fu_475_p2 <= std_logic_vector(unsigned(zext_ln43_fu_461_p1) + unsigned(ap_const_lv13_D80));
    xor_ln1560_fu_448_p2 <= (ap_const_lv1_1 xor and_ln1560_fu_442_p2);
    xor_ln938_fu_518_p2 <= (or_ln938_fu_507_p2 xor ap_const_lv1_1);
    xor_ln952_fu_260_p2 <= (tmp_6_fu_252_p3 xor ap_const_lv1_1);
    zext_ln43_fu_461_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_fu_454_p3),13));
    zext_ln950_fu_231_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln950_fu_226_p2),8));
    zext_ln960_fu_316_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(in_read_reg_594_pp0_iter1_reg),64));
    zext_ln961_fu_319_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln961_reg_642),64));
    zext_ln962_fu_328_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln962_reg_647),64));
    zext_ln964_fu_344_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tobool29_i_i290_reg_652),64));
    zext_ln965_fu_387_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_4_reg_657),64));
end behav;
