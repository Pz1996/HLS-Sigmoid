// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="sigmoid_plan_sigmoid_plan,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k325t-ffg676-2,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=3.552625,HLS_SYN_LAT=6,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=596,HLS_SYN_LUT=1176,HLS_VERSION=2021_1}" *)

module sigmoid_plan (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_r,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] in_r;
output  [15:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_pp0_stage0_subdone;
reg   [7:0] in_read_reg_570;
wire    ap_block_pp0_stage0_11001;
reg   [7:0] in_read_reg_570_pp0_iter1_reg;
reg   [7:0] in_read_reg_570_pp0_iter2_reg;
reg   [7:0] in_read_reg_570_pp0_iter3_reg;
reg   [7:0] in_read_reg_570_pp0_iter4_reg;
reg   [7:0] in_read_reg_570_pp0_iter5_reg;
wire   [31:0] sub_ln947_fu_159_p2;
reg   [31:0] sub_ln947_reg_581;
wire   [3:0] trunc_ln950_fu_169_p1;
reg   [3:0] trunc_ln950_reg_588;
wire   [7:0] add_ln952_fu_173_p2;
reg   [7:0] add_ln952_reg_593;
wire   [10:0] trunc_ln946_fu_179_p1;
reg   [10:0] trunc_ln946_reg_598;
reg   [10:0] trunc_ln946_reg_598_pp0_iter1_reg;
reg   [10:0] trunc_ln946_reg_598_pp0_iter2_reg;
wire   [0:0] icmp_ln1549_1_fu_193_p2;
reg   [0:0] icmp_ln1549_1_reg_603;
reg   [0:0] icmp_ln1549_1_reg_603_pp0_iter1_reg;
reg   [0:0] icmp_ln1549_1_reg_603_pp0_iter2_reg;
reg   [0:0] icmp_ln1549_1_reg_603_pp0_iter3_reg;
reg   [0:0] icmp_ln1549_1_reg_603_pp0_iter4_reg;
reg   [0:0] icmp_ln1549_1_reg_603_pp0_iter5_reg;
wire   [6:0] trunc_ln1386_fu_199_p1;
reg   [6:0] trunc_ln1386_reg_608;
reg   [6:0] trunc_ln1386_reg_608_pp0_iter1_reg;
reg   [6:0] trunc_ln1386_reg_608_pp0_iter2_reg;
reg   [6:0] trunc_ln1386_reg_608_pp0_iter3_reg;
reg   [6:0] trunc_ln1386_reg_608_pp0_iter4_reg;
reg   [6:0] trunc_ln1386_reg_608_pp0_iter5_reg;
wire   [0:0] icmp_ln961_fu_292_p2;
reg   [0:0] icmp_ln961_reg_613;
wire   [31:0] add_ln961_fu_298_p2;
reg   [31:0] add_ln961_reg_618;
wire   [31:0] sub_ln962_fu_303_p2;
reg   [31:0] sub_ln962_reg_623;
wire   [0:0] tobool29_i_i291_fu_308_p2;
reg   [0:0] tobool29_i_i291_reg_628;
reg   [62:0] m_4_reg_633;
reg   [0:0] p_Result_4_reg_638;
wire   [0:0] icmp_ln1560_1_fu_379_p2;
reg   [0:0] icmp_ln1560_1_reg_643;
reg   [0:0] icmp_ln1560_1_reg_643_pp0_iter3_reg;
reg   [0:0] icmp_ln1560_1_reg_643_pp0_iter4_reg;
wire   [63:0] p_Result_7_fu_414_p5;
reg   [63:0] p_Result_7_reg_648;
wire   [0:0] icmp_ln1560_fu_426_p2;
reg   [0:0] icmp_ln1560_reg_653;
reg   [0:0] icmp_ln1560_reg_653_pp0_iter4_reg;
wire   [0:0] xor_ln1560_fu_446_p2;
reg   [0:0] xor_ln1560_reg_663;
wire   [63:0] grp_fu_128_p0;
wire    ap_block_pp0_stage0;
reg   [7:0] p_Result_s_fu_133_p4;
wire   [31:0] p_Result_6_fu_143_p3;
reg   [31:0] l_fu_151_p3;
wire   [7:0] trunc_ln947_fu_165_p1;
wire   [3:0] tmp_5_fu_183_p4;
wire   [31:0] lsb_index_fu_203_p2;
wire   [30:0] tmp_2_fu_208_p4;
wire   [3:0] sub_ln950_fu_224_p2;
wire   [7:0] zext_ln950_fu_229_p1;
wire   [7:0] lshr_ln950_fu_233_p2;
wire   [7:0] p_Result_2_fu_239_p2;
wire   [0:0] tmp_3_fu_250_p3;
wire   [0:0] icmp_ln949_fu_218_p2;
wire   [0:0] icmp_ln950_fu_244_p2;
wire   [7:0] shl_ln952_fu_270_p2;
wire   [7:0] and_ln952_fu_275_p2;
wire   [0:0] p_Result_3_fu_280_p2;
wire   [0:0] and_ln949_fu_264_p2;
wire   [0:0] a_fu_286_p2;
wire   [0:0] xor_ln952_fu_258_p2;
wire   [63:0] zext_ln960_fu_314_p1;
wire   [63:0] zext_ln961_fu_317_p1;
wire   [63:0] zext_ln962_fu_326_p1;
wire   [63:0] lshr_ln961_fu_320_p2;
wire   [63:0] shl_ln962_fu_329_p2;
wire   [63:0] m_fu_335_p3;
wire   [63:0] zext_ln964_fu_342_p1;
wire   [63:0] m_1_fu_345_p2;
wire   [51:0] trunc_ln3_fu_369_p4;
wire   [10:0] sub_ln968_fu_395_p2;
wire   [10:0] select_ln946_fu_388_p3;
wire   [10:0] add_ln968_fu_400_p2;
wire   [63:0] zext_ln965_fu_385_p1;
wire   [11:0] tmp_fu_406_p3;
wire   [0:0] or_ln1560_fu_436_p2;
wire   [0:0] grp_fu_128_p2;
wire   [0:0] and_ln1560_fu_440_p2;
wire   [10:0] input_fu_452_p3;
wire   [12:0] zext_ln43_fu_459_p1;
wire   [12:0] r_1_fu_479_p3;
wire   [12:0] r_2_fu_492_p3;
wire   [0:0] icmp_ln1549_fu_463_p2;
wire   [0:0] icmp_ln938_fu_468_p2;
wire   [0:0] or_ln938_fu_505_p2;
wire   [0:0] xor_ln938_fu_516_p2;
wire   [0:0] and_ln1549_fu_522_p2;
wire   [0:0] and_ln1549_1_fu_527_p2;
wire   [12:0] x0_V_1_fu_486_p2;
wire   [0:0] or_ln1560_1_fu_511_p2;
wire   [12:0] x0_V_2_fu_499_p2;
wire   [12:0] x0_V_fu_473_p2;
wire   [0:0] or_ln1549_fu_532_p2;
wire   [12:0] select_ln1549_fu_538_p3;
wire   [12:0] select_ln1549_1_fu_546_p3;
wire   [12:0] select_ln1549_2_fu_554_p3;
wire    ap_block_pp0_stage0_00001;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to5;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
end

sigmoid_plan_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_128_p0),
    .din1(64'd4612530443357519872),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_128_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln952_reg_593 <= add_ln952_fu_173_p2;
        add_ln961_reg_618 <= add_ln961_fu_298_p2;
        icmp_ln1549_1_reg_603 <= icmp_ln1549_1_fu_193_p2;
        icmp_ln1549_1_reg_603_pp0_iter1_reg <= icmp_ln1549_1_reg_603;
        icmp_ln961_reg_613 <= icmp_ln961_fu_292_p2;
        in_read_reg_570 <= in_r;
        in_read_reg_570_pp0_iter1_reg <= in_read_reg_570;
        sub_ln947_reg_581 <= sub_ln947_fu_159_p2;
        sub_ln962_reg_623 <= sub_ln962_fu_303_p2;
        tobool29_i_i291_reg_628 <= tobool29_i_i291_fu_308_p2;
        trunc_ln1386_reg_608 <= trunc_ln1386_fu_199_p1;
        trunc_ln1386_reg_608_pp0_iter1_reg <= trunc_ln1386_reg_608;
        trunc_ln946_reg_598 <= trunc_ln946_fu_179_p1;
        trunc_ln946_reg_598_pp0_iter1_reg <= trunc_ln946_reg_598;
        trunc_ln950_reg_588 <= trunc_ln950_fu_169_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln1549_1_reg_603_pp0_iter2_reg <= icmp_ln1549_1_reg_603_pp0_iter1_reg;
        icmp_ln1549_1_reg_603_pp0_iter3_reg <= icmp_ln1549_1_reg_603_pp0_iter2_reg;
        icmp_ln1549_1_reg_603_pp0_iter4_reg <= icmp_ln1549_1_reg_603_pp0_iter3_reg;
        icmp_ln1549_1_reg_603_pp0_iter5_reg <= icmp_ln1549_1_reg_603_pp0_iter4_reg;
        icmp_ln1560_1_reg_643 <= icmp_ln1560_1_fu_379_p2;
        icmp_ln1560_1_reg_643_pp0_iter3_reg <= icmp_ln1560_1_reg_643;
        icmp_ln1560_1_reg_643_pp0_iter4_reg <= icmp_ln1560_1_reg_643_pp0_iter3_reg;
        icmp_ln1560_reg_653 <= icmp_ln1560_fu_426_p2;
        icmp_ln1560_reg_653_pp0_iter4_reg <= icmp_ln1560_reg_653;
        in_read_reg_570_pp0_iter2_reg <= in_read_reg_570_pp0_iter1_reg;
        in_read_reg_570_pp0_iter3_reg <= in_read_reg_570_pp0_iter2_reg;
        in_read_reg_570_pp0_iter4_reg <= in_read_reg_570_pp0_iter3_reg;
        in_read_reg_570_pp0_iter5_reg <= in_read_reg_570_pp0_iter4_reg;
        m_4_reg_633 <= {{m_1_fu_345_p2[63:1]}};
        p_Result_4_reg_638 <= m_1_fu_345_p2[32'd54];
        p_Result_7_reg_648 <= p_Result_7_fu_414_p5;
        trunc_ln1386_reg_608_pp0_iter2_reg <= trunc_ln1386_reg_608_pp0_iter1_reg;
        trunc_ln1386_reg_608_pp0_iter3_reg <= trunc_ln1386_reg_608_pp0_iter2_reg;
        trunc_ln1386_reg_608_pp0_iter4_reg <= trunc_ln1386_reg_608_pp0_iter3_reg;
        trunc_ln1386_reg_608_pp0_iter5_reg <= trunc_ln1386_reg_608_pp0_iter4_reg;
        trunc_ln946_reg_598_pp0_iter2_reg <= trunc_ln946_reg_598_pp0_iter1_reg;
        xor_ln1560_reg_663 <= xor_ln1560_fu_446_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to5 = 1'b1;
    end else begin
        ap_idle_pp0_0to5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to5 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_fu_286_p2 = (p_Result_3_fu_280_p2 | and_ln949_fu_264_p2);

assign add_ln952_fu_173_p2 = ($signed(trunc_ln947_fu_165_p1) + $signed(8'd203));

assign add_ln961_fu_298_p2 = ($signed(sub_ln947_reg_581) + $signed(32'd4294967242));

assign add_ln968_fu_400_p2 = (sub_ln968_fu_395_p2 + select_ln946_fu_388_p3);

assign and_ln1549_1_fu_527_p2 = (xor_ln1560_reg_663 & and_ln1549_fu_522_p2);

assign and_ln1549_fu_522_p2 = (xor_ln938_fu_516_p2 & icmp_ln1549_1_reg_603_pp0_iter5_reg);

assign and_ln1560_fu_440_p2 = (or_ln1560_fu_436_p2 & grp_fu_128_p2);

assign and_ln949_fu_264_p2 = (icmp_ln950_fu_244_p2 & icmp_ln949_fu_218_p2);

assign and_ln952_fu_275_p2 = (shl_ln952_fu_270_p2 & in_read_reg_570);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = {{select_ln1549_2_fu_554_p3}, {3'd0}};

assign grp_fu_128_p0 = p_Result_7_reg_648;

assign icmp_ln1549_1_fu_193_p2 = ((tmp_5_fu_183_p4 != 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln1549_fu_463_p2 = ((in_read_reg_570_pp0_iter5_reg > 8'd79) ? 1'b1 : 1'b0);

assign icmp_ln1560_1_fu_379_p2 = ((trunc_ln3_fu_369_p4 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln1560_fu_426_p2 = ((add_ln968_fu_400_p2 != 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln938_fu_468_p2 = ((in_read_reg_570_pp0_iter5_reg == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln949_fu_218_p2 = (($signed(tmp_2_fu_208_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln950_fu_244_p2 = ((p_Result_2_fu_239_p2 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln961_fu_292_p2 = (($signed(lsb_index_fu_203_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign input_fu_452_p3 = {{in_read_reg_570_pp0_iter5_reg}, {3'd0}};


always @ (p_Result_6_fu_143_p3) begin
    if (p_Result_6_fu_143_p3[0] == 1'b1) begin
        l_fu_151_p3 = 32'd0;
    end else if (p_Result_6_fu_143_p3[1] == 1'b1) begin
        l_fu_151_p3 = 32'd1;
    end else if (p_Result_6_fu_143_p3[2] == 1'b1) begin
        l_fu_151_p3 = 32'd2;
    end else if (p_Result_6_fu_143_p3[3] == 1'b1) begin
        l_fu_151_p3 = 32'd3;
    end else if (p_Result_6_fu_143_p3[4] == 1'b1) begin
        l_fu_151_p3 = 32'd4;
    end else if (p_Result_6_fu_143_p3[5] == 1'b1) begin
        l_fu_151_p3 = 32'd5;
    end else if (p_Result_6_fu_143_p3[6] == 1'b1) begin
        l_fu_151_p3 = 32'd6;
    end else if (p_Result_6_fu_143_p3[7] == 1'b1) begin
        l_fu_151_p3 = 32'd7;
    end else if (p_Result_6_fu_143_p3[8] == 1'b1) begin
        l_fu_151_p3 = 32'd8;
    end else if (p_Result_6_fu_143_p3[9] == 1'b1) begin
        l_fu_151_p3 = 32'd9;
    end else if (p_Result_6_fu_143_p3[10] == 1'b1) begin
        l_fu_151_p3 = 32'd10;
    end else if (p_Result_6_fu_143_p3[11] == 1'b1) begin
        l_fu_151_p3 = 32'd11;
    end else if (p_Result_6_fu_143_p3[12] == 1'b1) begin
        l_fu_151_p3 = 32'd12;
    end else if (p_Result_6_fu_143_p3[13] == 1'b1) begin
        l_fu_151_p3 = 32'd13;
    end else if (p_Result_6_fu_143_p3[14] == 1'b1) begin
        l_fu_151_p3 = 32'd14;
    end else if (p_Result_6_fu_143_p3[15] == 1'b1) begin
        l_fu_151_p3 = 32'd15;
    end else if (p_Result_6_fu_143_p3[16] == 1'b1) begin
        l_fu_151_p3 = 32'd16;
    end else if (p_Result_6_fu_143_p3[17] == 1'b1) begin
        l_fu_151_p3 = 32'd17;
    end else if (p_Result_6_fu_143_p3[18] == 1'b1) begin
        l_fu_151_p3 = 32'd18;
    end else if (p_Result_6_fu_143_p3[19] == 1'b1) begin
        l_fu_151_p3 = 32'd19;
    end else if (p_Result_6_fu_143_p3[20] == 1'b1) begin
        l_fu_151_p3 = 32'd20;
    end else if (p_Result_6_fu_143_p3[21] == 1'b1) begin
        l_fu_151_p3 = 32'd21;
    end else if (p_Result_6_fu_143_p3[22] == 1'b1) begin
        l_fu_151_p3 = 32'd22;
    end else if (p_Result_6_fu_143_p3[23] == 1'b1) begin
        l_fu_151_p3 = 32'd23;
    end else if (p_Result_6_fu_143_p3[24] == 1'b1) begin
        l_fu_151_p3 = 32'd24;
    end else if (p_Result_6_fu_143_p3[25] == 1'b1) begin
        l_fu_151_p3 = 32'd25;
    end else if (p_Result_6_fu_143_p3[26] == 1'b1) begin
        l_fu_151_p3 = 32'd26;
    end else if (p_Result_6_fu_143_p3[27] == 1'b1) begin
        l_fu_151_p3 = 32'd27;
    end else if (p_Result_6_fu_143_p3[28] == 1'b1) begin
        l_fu_151_p3 = 32'd28;
    end else if (p_Result_6_fu_143_p3[29] == 1'b1) begin
        l_fu_151_p3 = 32'd29;
    end else if (p_Result_6_fu_143_p3[30] == 1'b1) begin
        l_fu_151_p3 = 32'd30;
    end else if (p_Result_6_fu_143_p3[31] == 1'b1) begin
        l_fu_151_p3 = 32'd31;
    end else begin
        l_fu_151_p3 = 32'd32;
    end
end

assign lsb_index_fu_203_p2 = ($signed(sub_ln947_reg_581) + $signed(32'd4294967243));

assign lshr_ln950_fu_233_p2 = 8'd255 >> zext_ln950_fu_229_p1;

assign lshr_ln961_fu_320_p2 = zext_ln960_fu_314_p1 >> zext_ln961_fu_317_p1;

assign m_1_fu_345_p2 = (m_fu_335_p3 + zext_ln964_fu_342_p1);

assign m_fu_335_p3 = ((icmp_ln961_reg_613[0:0] == 1'b1) ? lshr_ln961_fu_320_p2 : shl_ln962_fu_329_p2);

assign or_ln1549_fu_532_p2 = (icmp_ln1549_fu_463_p2 | and_ln1549_1_fu_527_p2);

assign or_ln1560_1_fu_511_p2 = (xor_ln1560_reg_663 | or_ln938_fu_505_p2);

assign or_ln1560_fu_436_p2 = (icmp_ln1560_reg_653_pp0_iter4_reg | icmp_ln1560_1_reg_643_pp0_iter4_reg);

assign or_ln938_fu_505_p2 = (icmp_ln938_fu_468_p2 | icmp_ln1549_fu_463_p2);

assign p_Result_2_fu_239_p2 = (lshr_ln950_fu_233_p2 & in_read_reg_570);

assign p_Result_3_fu_280_p2 = ((and_ln952_fu_275_p2 != 8'd0) ? 1'b1 : 1'b0);

assign p_Result_6_fu_143_p3 = {{24'd16777215}, {p_Result_s_fu_133_p4}};

assign p_Result_7_fu_414_p5 = {{tmp_fu_406_p3}, {zext_ln965_fu_385_p1[51:0]}};

integer ap_tvar_int_0;

always @ (in_r) begin
    for (ap_tvar_int_0 = 8 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 7 - 0) begin
            p_Result_s_fu_133_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_133_p4[ap_tvar_int_0] = in_r[7 - ap_tvar_int_0];
        end
    end
end

assign r_1_fu_479_p3 = {{in_read_reg_570_pp0_iter5_reg}, {5'd0}};

assign r_2_fu_492_p3 = {{trunc_ln1386_reg_608_pp0_iter5_reg}, {6'd0}};

assign select_ln1549_1_fu_546_p3 = ((or_ln1560_1_fu_511_p2[0:0] == 1'b1) ? x0_V_2_fu_499_p2 : x0_V_fu_473_p2);

assign select_ln1549_2_fu_554_p3 = ((or_ln1549_fu_532_p2[0:0] == 1'b1) ? select_ln1549_fu_538_p3 : select_ln1549_1_fu_546_p3);

assign select_ln1549_fu_538_p3 = ((icmp_ln1549_fu_463_p2[0:0] == 1'b1) ? 13'd4096 : x0_V_1_fu_486_p2);

assign select_ln946_fu_388_p3 = ((p_Result_4_reg_638[0:0] == 1'b1) ? 11'd1023 : 11'd1022);

assign shl_ln952_fu_270_p2 = 8'd1 << add_ln952_reg_593;

assign shl_ln962_fu_329_p2 = zext_ln960_fu_314_p1 << zext_ln962_fu_326_p1;

assign sub_ln947_fu_159_p2 = (32'd8 - l_fu_151_p3);

assign sub_ln950_fu_224_p2 = ($signed(4'd14) - $signed(trunc_ln950_reg_588));

assign sub_ln962_fu_303_p2 = (32'd54 - sub_ln947_reg_581);

assign sub_ln968_fu_395_p2 = (11'd4 - trunc_ln946_reg_598_pp0_iter2_reg);

assign tmp_2_fu_208_p4 = {{lsb_index_fu_203_p2[31:1]}};

assign tmp_3_fu_250_p3 = lsb_index_fu_203_p2[32'd31];

assign tmp_5_fu_183_p4 = {{in_r[7:4]}};

assign tmp_fu_406_p3 = {{1'd0}, {add_ln968_fu_400_p2}};

assign tobool29_i_i291_fu_308_p2 = (xor_ln952_fu_258_p2 & a_fu_286_p2);

assign trunc_ln1386_fu_199_p1 = in_r[6:0];

assign trunc_ln3_fu_369_p4 = {{m_1_fu_345_p2[52:1]}};

assign trunc_ln946_fu_179_p1 = l_fu_151_p3[10:0];

assign trunc_ln947_fu_165_p1 = sub_ln947_fu_159_p2[7:0];

assign trunc_ln950_fu_169_p1 = sub_ln947_fu_159_p2[3:0];

assign x0_V_1_fu_486_p2 = (r_1_fu_479_p3 + 13'd2560);

assign x0_V_2_fu_499_p2 = (r_2_fu_492_p3 + 13'd2048);

assign x0_V_fu_473_p2 = (zext_ln43_fu_459_p1 + 13'd3456);

assign xor_ln1560_fu_446_p2 = (1'd1 ^ and_ln1560_fu_440_p2);

assign xor_ln938_fu_516_p2 = (or_ln938_fu_505_p2 ^ 1'd1);

assign xor_ln952_fu_258_p2 = (tmp_3_fu_250_p3 ^ 1'd1);

assign zext_ln43_fu_459_p1 = input_fu_452_p3;

assign zext_ln950_fu_229_p1 = sub_ln950_fu_224_p2;

assign zext_ln960_fu_314_p1 = in_read_reg_570_pp0_iter1_reg;

assign zext_ln961_fu_317_p1 = add_ln961_reg_618;

assign zext_ln962_fu_326_p1 = sub_ln962_reg_623;

assign zext_ln964_fu_342_p1 = tobool29_i_i291_reg_628;

assign zext_ln965_fu_385_p1 = m_4_reg_633;

endmodule //sigmoid_plan
